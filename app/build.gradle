import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
//apply plugin: 'kotlin-parcelize'
apply plugin: 'dagger.hilt.android.plugin'

def keystorePropertiesFile = rootProject.file("key.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdk 32
    buildToolsVersion '32.0.0'

    defaultConfig {
        applicationId "com.qtk.kotlintest"
        minSdkVersion 26
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            signingConfig signingConfigs.release
            ndk {
                abiFilters 'arm64-v8a', 'x86_64'
            }
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    androidExtensions {
        experimental = true
    }

    viewBinding {
        enabled = true
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            if (outputFileName.endsWith('.apk')) {
                def date = new SimpleDateFormat("yyyy-MM-dd").format(new Date())
                if (variant.productFlavors[0]?.name == null) {
                    outputFileName = "KotlinTest_${defaultConfig.versionName}_${variant.buildType.name}_${date}.apk"
                } else {
                    outputFileName = "KotlinTest_${defaultConfig.versionName}_${variant.buildType.name}_${variant.productFlavors[0]?.name}_${date}.apk"
                }
            }
        }
    }
}

allprojects {
    configurations.all {
        resolutionStrategy {
            force "androidx.activity:activity:1.5.0"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.6.0-alpha01'
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
//    implementation project(path: ':flutter')
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.room:room-runtime:2.4.3'
    implementation 'androidx.paging:paging-runtime-ktx:3.1.1'
    implementation 'org.ligboy.retrofit2:converter-fastjson:2.2.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'com.google.android.material:material:1.6.1'
    implementation project(path: ':LeonidsLib')
    implementation files('libs/jsch-0.1.55.jar')
    //room
    kapt 'androidx.room:room-compiler:2.4.3'
    annotationProcessor 'androidx.room:room-compiler:2.4.3'
    implementation 'androidx.room:room-ktx:2.4.3'
    implementation 'androidx.room:room-testing:2.4.2'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation "org.jetbrains.anko:anko-common:$anko_version"

    implementation 'com.google.code.gson:gson:2.9.0'
    implementation "com.squareup.picasso:picasso:2.71828"
    implementation "org.jetbrains.anko:anko-sqlite:$anko_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
    //retrofit2
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    //camerax
    implementation "androidx.camera:camera-camera2:1.1.0-alpha10"
    implementation "androidx.camera:camera-view:1.0.0-alpha30"
    implementation "androidx.camera:camera-extensions:1.0.0-alpha30"
    implementation "androidx.camera:camera-lifecycle:1.1.0-alpha10"
    //hilt
    implementation 'com.google.dagger:hilt-android:2.43'
    kapt 'com.google.dagger:hilt-android-compiler:2.43'
    //moshi
    implementation 'com.squareup.moshi:moshi:1.13.0'
    implementation 'com.squareup.moshi:moshi-kotlin:1.13.0'
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.13.0'
    //Glide
    implementation 'com.github.bumptech.glide:glide:4.14.2'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    implementation ("com.github.bumptech.glide:recyclerview-integration:4.12.0") {
        // Excludes the support library because it's already included by Glide.
        transitive = false
    }
    //Coil
    implementation 'io.coil-kt:coil:1.1.1'
    //permissionx
    implementation 'com.permissionx.guolindev:permissionx:1.4.0'
    //dataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    //workManager
    implementation "androidx.work:work-runtime:2.7.0"
    implementation "androidx.work:work-runtime-ktx:2.7.0"
    //高德
    implementation 'com.amap.api:3dmap:latest.integration'
//    implementation 'com.amap.api:search:latest.integration'
//    implementation 'com.amap.api:location:latest.integration'

    implementation 'com.gitee.zackratos:UltimateBarX:0.8.0'
    //liveDataBus
    implementation 'com.jeremyliao:live-event-bus-x:1.7.3'
    //flexbox
    implementation 'com.google.android.flexbox:flexbox:3.0.0'

    implementation 'com.github.ome450901:SimpleRatingBar:1.5.1'

    implementation 'com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-java:v8.1.9-release-jitpack'
    implementation 'com.github.CarGuo.GSYVideoPlayer:GSYVideoPlayer-exo2:v8.1.9-release-jitpack'
    implementation 'com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-arm64:v8.1.9-release-jitpack'
    implementation 'com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-x64:v8.1.9-release-jitpack'

    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation 'com.github.Tencent.soter:soter-wrapper:2.0.7'
}

/**
 * 关闭不需要执行的task，提高build速度
 */
this.tasks.whenTaskAdded {
    task ->
        if (task.name.contains('UnitTest') || task.name.contains("AndroidTest")) {
            task.enabled = false
        }
}